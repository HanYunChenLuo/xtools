name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  CARGO_HOME: ${{ github.workspace }}/.cargo
  MACOSX_DEPLOYMENT_TARGET: "11.0"

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run tests
        run: |
          rustc --version
          cargo --version
          cargo test --verbose

  build:
    name: Build ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            name: Linux x86_64
            target: x86_64-unknown-linux-gnu
            artifact_name: xtools-linux-x86_64.tar.gz
          - os: macos-11
            name: macOS x86_64
            target: x86_64-apple-darwin
            artifact_name: xtools-macos-x86_64.tar.gz
          - os: macos-11
            name: macOS ARM64
            target: aarch64-apple-darwin
            artifact_name: xtools-macos-arm64.tar.gz
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target/
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.target }}-cargo-

      - name: Build release binary
        run: |
          rustc --version
          cargo --version
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}/release/xperformance artifacts/
          cp README.md artifacts/
          cp README_zh.md artifacts/
          cp LICENSE artifacts/
          cd artifacts
          tar -czf ${{ matrix.artifact_name }} *

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: artifacts/${{ matrix.artifact_name }}
          retention-days: 0  # Keep forever

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: xtools-linux-x86_64.tar.gz
          path: artifacts

      - name: Download macOS x86_64 artifact
        uses: actions/download-artifact@v3
        with:
          name: xtools-macos-x86_64.tar.gz
          path: artifacts

      - name: Download macOS ARM64 artifact
        uses: actions/download-artifact@v3
        with:
          name: xtools-macos-arm64.tar.gz
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: |
            XTools Release ${{ github.ref_name }}

            ## Downloads
            - Linux x86_64 (Ubuntu 18.04+ compatible)
            - macOS x86_64 (macOS 11.0+ Intel)
            - macOS ARM64 (macOS 11.0+ Apple Silicon)
          files: |
            artifacts/xtools-linux-x86_64.tar.gz
            artifacts/xtools-macos-x86_64.tar.gz
            artifacts/xtools-macos-arm64.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true